{"version":3,"sources":["./src/app/dropdown/dropdown.component.html","./src/app/dropdown/dropdown-routing.module.ts","./src/app/dropdown/dropdown.component.scss","./src/app/dropdown/dropdown.component.ts","./src/app/dropdown/dropdown.module.ts"],"names":[],"mappings":"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","file":"dropdown-dropdown-module-es2015.js","sourcesContent":["module.exports = \"<a name=\\\"dropdown\\\"><h1 class=\\\"my-3 d-none d-lg-block\\\">Dropdown</h1></a>\\n<div class=\\\"card my-3 mx-n3 mx-md-0\\\">\\n    <h4 class=\\\"card-header\\\">Installation and usage</h4>\\n    <div class=\\\"card-body\\\">\\n        <p>See <a routerLink=\\\"'/getting-started'\\\">getting started</a> for a complete setup.</p>\\n        <strong>Steps to get started:</strong>\\n        <ol class=\\\"list-group list-group-ordered mb-3\\\">\\n            <li class=\\\"list-group-item\\\">Install using npm (see <a routerLink=\\\"'/getting-started'\\\">getting started</a>)</li>\\n            <li class=\\\"list-group-item\\\">Import <code>ngbDropdownModule</code> (if you're not including <code>ngbModule</code>)</li>\\n            <li class=\\\"list-group-item\\\">Import @sebgroup/boostrap dropdown styles (if you're not including all of bootstrap)</li>\\n        </ol>\\n        <strong>Import dropdown module:</strong>\\n        <exemplify [sources]=\\\"[{\\n        'name':'app.module.ts',\\n        'src':'...\\\\nimport {NgbDropdownModule} from &quot;@ng-bootstrap/ng-bootstrap&quot;;'+\\n        '\\\\n\\\\n@NgModule({\\\\n'+\\n        '  declarations: [AppComponent],\\\\n'+\\n        '  imports: [\\\\n'+\\n        '    ...\\\\n'+\\n        '    NgbDropdownModule // <-- Add this line\\\\n'+\\n        '  ]\\\\n'+\\n        '})','lang':'js'\\n        }]\\\"></exemplify>\\n        <strong class=\\\"mt-3 d-block\\\">Import dropdown styles:</strong>\\n        <p>This component is meant to be used together with <a href=\\\"https://github.com/sebgroup/bootstrap\\\" target=\\\"_blank\\\">@sebgroup/bootstrap</a> and in order for the component to get the correct appearance you need to import styles from @sebgroup/bootstrap files to your project.</p>\\n        <exemplify [sources]=\\\"[{\\n        'name':'styles.scss',\\n        'src':'@import \\\\'~@sebgroup/bootstrap/scss/core\\\\';\\\\n'+\\n'@import \\\\'~@sebgroup/bootstrap/scss/styles/reboot\\\\';\\\\n'+\\n'@import \\\\'~@sebgroup/bootstrap/scss/styles/dropdown\\\\'; /* <-- Add this line */\\\\n'+\\n'@import \\\\'~@sebgroup/ng-bootstrap/scss/styles/ngb-dropdown\\\\'; /* <-- Add this line */\\\\n'+\\n'@import \\\\'~@sebgroup/fonts/scss/seb-fonts\\\\';','lang':'css'\\n        }]\\\"></exemplify>\\n    </div>\\n</div>\\n<div class=\\\"alert alert-warning alert-icon mx-n3 mx-md-0\\\">\\n    <strong>Mobile development!</strong> To make the experience extra crisp on mobile devices and more specifically to avoid the issue with scrolling content behind the dropdown on mobile devices, you should consider adding <a class=\\\"alert-link\\\" href=\\\"https://github.com/willmcpo/body-scroll-lock\\\" target=\\\"_blank\\\">body scroll lock</a> to your project when implementing dropdowns. An example implementation for angular can also be found on <a class=\\\"alert-link\\\" href=\\\"https://stackblitz.com/edit/seb-dropdown-body-scroll-lock\\\" target=\\\"_blank\\\">stack blitz</a>.\\n    <br><br><strong>Dropdown cut off?</strong> If the dropdown is placed inside a container with overflow set to auto or hidden you should consider adding container=\\\"body\\\" to add the dropdown to the body element instead, this to avoid cutting off the dropdown menu.\\n    <div class=\\\"custom-control custom-checkbox\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheckInline\\\" [checked]=\\\"useContainerBody\\\" (change)=\\\"toggleContainer(useContainerBody)\\\">\\n        <label class=\\\"custom-control-label\\\" for=\\\"customCheckInline\\\">Use container='body'</label>\\n    </div>\\n</div>\\n<div class=\\\"card mb-4 mx-n3 mx-md-0\\\" id=\\\"dropdownExample\\\">\\n    <h4 class=\\\"card-header\\\">\\n       Use dropdown as select\\n    </h4>\\n    <div class=\\\"card-body\\\">\\n        <form>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-auto\\\">\\n                    <label for=\\\"ngb_dropdown\\\">Example dropdown select</label>\\n                    <div ngbDropdown [container]=\\\"useContainerBody ? 'body' : 'null'\\\" (openChange)=\\\"toggleBodyLock($event, dropdownMenu)\\\">\\n                        <button class=\\\"btn btn-outline-primary w-100\\\" id=\\\"ngb_dropdown\\\" ngbDropdownToggle>{{selected ? selected:'select...'}}</button>\\n                        <div ngbDropdownMenu aria-labelledby=\\\"dropdownExample\\\" class=\\\"w-100 mb-3\\\" #dropdownMenu>\\n                            <button *ngFor=\\\"let option of options\\\" class=\\\"dropdown-item\\\" (click)=\\\"selected = option\\\" [ngClass]=\\\"{'active':selected === option}\\\">{{option}}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n        <code>\\n            <p class=\\\"mt-3 mb-0\\\">Selected: {{selected | json}}</p>\\n        </code>\\n        <exemplify [selector]=\\\"'#dropdownExample .col-12 > *'\\\" [escapeStrings]=\\\"[' ngbDropdownToggle', ' ngbDropdownMenu',' ngbDropdown', '[ngClass]']\\\"></exemplify>\\n    </div>\\n</div>\\n<div class=\\\"card my-3 mx-n3 mx-md-0\\\" id=\\\"multiselectExample\\\">\\n    <h4 class=\\\"card-header\\\">\\n        Use dropdown as a multi-select\\n    </h4>\\n    <div class=\\\"card-body\\\">\\n        <form>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-auto\\\">\\n                    <label for=\\\"ngb_multiselect\\\">Example multi-select</label>\\n                    <div ngbDropdown #multiSelect=\\\"ngbDropdown\\\" [container]=\\\"useContainerBody ? 'body' : 'null'\\\">\\n                        <button class=\\\"btn btn-secondary w-100\\\" id=\\\"ngb_multiselect\\\" ngbDropdownToggle>{{selectedMulti.length === 0 ? 'select...': selectedMulti.length === 1 ? selectedMulti[0]: selectedMulti.length + ' selected'}}</button>\\n                        <div ngbDropdownMenu aria-labelledby=\\\"ngb_multiselect\\\" class=\\\"w-100 mb-3\\\">\\n                            <div class=\\\"dropdown-control\\\">\\n                                <div class=\\\"row mb-2 d-sm-none\\\">\\n                                    <div class=\\\"col text-right\\\">\\n                                        <span>Close</span><i class=\\\"far fa-times ml-2\\\"></i>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"btn-group w-100\\\">\\n                                    <button class=\\\"btn btn-sm btn-secondary w-100\\\" (click)=\\\"$event.stopPropagation();deselectAll()\\\">None</button>\\n                                    <button class=\\\"btn btn-sm btn-secondary w-100\\\" (click)=\\\"$event.stopPropagation();selectAll()\\\">All</button>\\n                                </div>\\n                                <div class=\\\"dropdown-divider\\\"></div>\\n                            </div>\\n                            <div class=\\\"dropdown-multi-select-options\\\">\\n                                <button *ngFor=\\\"let option of options\\\" class=\\\"dropdown-item\\\" (click)=\\\"$event.stopPropagation();select(option)\\\" [ngClass]=\\\"{'active':selectedMulti.indexOf(option) !== -1}\\\">{{option}}</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n        <code>\\n            <p class=\\\"mt-3 mb-0\\\">Selected: {{selectedMulti | json}}</p>\\n        </code>\\n        <exemplify [selector]=\\\"'#multiselectExample .col-12 > *'\\\" [escapeStrings]=\\\"[' ngbDropdownToggle', ' ngbDropdownMenu',' ngbDropdown', '[ngClass]']\\\"></exemplify>\\n    </div>\\n</div>\\n<div class=\\\"card my-3 mx-n3 mx-md-0\\\" id=\\\"dropdownSizeExample\\\">\\n    <h4 class=\\\"card-header\\\">\\n        Angular dropdown select sizing\\n    </h4>\\n    <div class=\\\"card-body\\\">\\n        <form>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-auto\\\">\\n                    <label for=\\\"dropdownSmall\\\">Small dropdown select</label>\\n                    <div ngbDropdown [container]=\\\"useContainerBody ? 'body' : 'null'\\\">\\n                        <button class=\\\"btn btn-secondary btn-sm w-100\\\" id=\\\"dropdownSmall\\\" ngbDropdownToggle>{{selected ? selected:'select...'}}</button>\\n                        <div ngbDropdownMenu aria-labelledby=\\\"dropdownSmall\\\" class=\\\"w-100 mb-3\\\">\\n                            <button *ngFor=\\\"let option of options\\\" class=\\\"dropdown-item\\\" (click)=\\\"selected = option\\\" [ngClass]=\\\"{'active':selected === option}\\\">{{option}}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-auto\\\">\\n                    <label for=\\\"dropdownNormal\\\">Normal dropdown select</label>\\n                    <div ngbDropdown [container]=\\\"useContainerBody ? 'body' : 'null'\\\">\\n                        <button class=\\\"btn btn-secondary w-100\\\" id=\\\"dropdownNormal\\\" ngbDropdownToggle>{{selected ? selected:'select...'}}</button>\\n                        <div ngbDropdownMenu aria-labelledby=\\\"dropdownNormal\\\" class=\\\"w-100 mb-3\\\">\\n                            <button *ngFor=\\\"let option of options\\\" class=\\\"dropdown-item\\\" (click)=\\\"selected = option\\\" [ngClass]=\\\"{'active':selected === option}\\\">{{option}}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-auto\\\">\\n                    <label for=\\\"dropdownLarge\\\">Large dropdown select</label>\\n                    <div ngbDropdown [container]=\\\"useContainerBody ? 'body' : 'null'\\\">\\n                        <button class=\\\"btn btn-secondary btn-lg w-100\\\" id=\\\"dropdownLarge\\\" ngbDropdownToggle>{{selected ? selected:'select...'}}</button>\\n                        <div ngbDropdownMenu aria-labelledby=\\\"dropdownLarge\\\" class=\\\"w-100 mb-3\\\">\\n                            <button *ngFor=\\\"let option of options\\\" class=\\\"dropdown-item\\\" (click)=\\\"selected = option\\\" [ngClass]=\\\"{'active':selected === option}\\\">{{option}}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n        <code>\\n            <p class=\\\"mt-3 mb-0\\\">Selected: {{selected | json}}</p>\\n        </code>\\n        <exemplify [selector]=\\\"'#dropdownSizeExample .col-12 > *'\\\" [escapeStrings]=\\\"[' ngbDropdownToggle', ' ngbDropdownMenu',' ngbDropdown', '[ngClass]']\\\"></exemplify>\\n    </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DropdownComponent } from './dropdown.component';\n\nconst routes: Routes = [{ path: '', component: DropdownComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DropdownRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ryb3Bkb3duL2Ryb3Bkb3duLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { MobileDetectService } from '../services/mobile-detect.service';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent {\n\n  constructor(private mobileDetectService: MobileDetectService) { }\n\n  options: Array<string> = ['First', 'Second', 'Third', 'Forth']; // available options, used by dropdown and multi-select example\n  selected: string; // selected option for dropdown example\n  selectedMulti: Array<string> = []; // selected options for multi-select example\n  useContainerBody = true;\n\n  /**\n   * Select\n   * @Param {string} option - option to be selected/deselected\n   */\n  select(option: string) {\n\n    // get index of option in selected options\n    const index = this.selectedMulti.indexOf(option);\n\n    // if option has index i.e. exists in array...\n    if (index !== -1) {\n\n      // ...remove it from the array\n      this.selectedMulti.splice(index, 1);\n\n    } else {\n      // ...if not add it to the array\n      this.selectedMulti.push(option);\n    }\n\n  }\n\n  /**\n   * Select all - selects all options\n   */\n  selectAll() {\n    this.selectedMulti = [...this.options];\n  }\n\n  /**\n   * Deselect all - deselects all options\n   */\n  deselectAll() {\n    this.selectedMulti = [];\n  }\n\n  toggleBodyLock(show: boolean, templateRef: any) {\n    if (this.mobileDetectService.isMobile()) {\n      if (show) {\n        disableBodyScroll(templateRef);\n      } else {\n        enableBodyScroll(templateRef);\n      }\n    }\n  }\n\n  toggleContainer(value: boolean) {\n    this.useContainerBody = !this.useContainerBody;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DropdownRoutingModule } from './dropdown-routing.module';\nimport { DropdownComponent } from './dropdown.component';\nimport {SharedModule} from \"../shared/shared.module\";\nimport {NgbDropdownModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormsModule} from \"@angular/forms\";\n\n\n@NgModule({\n  declarations: [DropdownComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    NgbDropdownModule,\n    DropdownRoutingModule\n  ]\n})\nexport class DropdownModule { }\n"],"sourceRoot":"webpack:///"}